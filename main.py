from dotenv import load_dotenv
import telebot

import os

from classify_text.service import ClassifyText

load_dotenv()

TOKEN = os.environ.get("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(content_types=["document"])
def handle_txt_file(message):
    file_name = message.document.file_name
    if not file_name.endswith(".txt"):
        bot.reply_to(message, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ `.txt` —Ñ–∞–π–ª.")
        return

    try:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        temp_path = "temp_text.txt"
        with open(temp_path, "wb") as f:
            f.write(downloaded_file)

        classifier = ClassifyText(temp_path)
        res = classifier.classify_text()

        bot.reply_to(message, f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–µ–∫—Å—Ç–∞: *{res}*", parse_mode="Markdown")

        os.remove(temp_path)

    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")

@bot.message_handler(commands=["start", "help"])
def send_welcome(message):
    bot.reply_to(message, "üëã –ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ –º–Ω–µ `.txt` —Ñ–∞–π–ª —Å —Ç–µ–∫—Å—Ç–æ–º, –∏ —è —Å–∫–∞–∂—É, –∫ –∫–∞–∫–æ–π —Ä—É–±—Ä–∏–∫–µ –æ–Ω –æ—Ç–Ω–æ—Å–∏—Ç—Å—è.")


if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    bot.polling()
        
